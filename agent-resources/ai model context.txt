Project description: create datasets to be used to train a AI model. 

The model's specialization is the micropython language specifically. The micropython language is used to control microcontrollers. 

Exclusions: The language CircuitPython is also used to control microcontrollers and is also based on Python but is so different from micropython that including it would introduce significant confusion. At this stage of the project references to or examples of Circuitpython should not be included or considered when compiling datasets. 

Current stage of the project: Generate an initial set of straightforward datasets. At some point in the future another level of datasets will be created that correspond to this level but give significantly more explanation and detail.

Process: One dataset file is to be created per subcategory. Refer to the category list in the file "categories.txt" located in the "agent-resources" folder. The fields for a dataset entry are: prompt, response, notes, tags. Prompt and response are required for all entries. Almost all responses should include code. The code should include helpful notes. The code in a response is to be standalone meaning that it should be able to be executed as is which means that it may have to include the relevant "import" lines at the top. If the code would require a persistent loop in order to work, include it. The notes field should be used to include important caveats or reminders regarding pressing matters such as safety or avoiding damage to hardware. A project goal is for the code to include "best practices". An example of this meaning is, when using push buttons with a microcontroller it is easy to inadvertently send the microcontroller what it will interpret as multiple button presses. To prevent this from happening it is always recommended to include "debouncing" code and thus that code should be included. The comments in the code should point out why it is there but shouldn't include a long exlanation. However, a more detailed explanation can be included in the notes field. The tags field, while not required, will likely be used. In the previous example regarding a button, a tag of "button" should be included. "micropython" is never to be used as a tag as it superfluous. If the response to a prompt would differ from one hardware brand, version, design then it is desired that an additional entry be created with a prompt that is a variation of the source prompt. These variations should include the name of the differing hardware to which the response applies. An example initial prompt might be: "How do you make an LED flash?" Because the function used code in the response requires that a specific pin be referenced the reponse may say "To make an LED flash that is connected to Pin 0 ..." However, it may be that when using a particular microcontroller, an "ESP" type for example, using Pin 0 may be difficult, problematic, or even just unpreferable. In that case include an additional entry in the dataset that is a variation of the initial entry. The prompt in this additional entry should include the name of the hardware. An example variation of the initial prompt is: "How do you make an LED flash when using an ESP type microcontroller?". In that example the hardware was specified as "an ESP type microcontroller". There are different microcontrollers that are "ESP type", example: the ESP8266 and the ESP32. Both of those types have various builds, example: ESP32-S2, ESP32-S3, ESP32-C3. These different versions may have different modules that add functionality. If the functionality is directly applicable to the prompt then it may likely ought to be included. Example: "How do you connect two raspberry pico's together?" The most straightforward answer that would apply to all versions of the Raspberry pico may involve a wired connection of sorts. However, the Raspberry Pico W includes wireless capabilities. If that functionality is available it would be preferable to include it. However, if no specific hardware is specified in the prompt a simple mention in the notes such as "if the hardware in question hase wireless communication capability then a connection using a wireless protocol may be an option". In that case an entry should be added where the prompt includes a reference to the functionality mentioned in the note. Example: "How do you connect two Raspberry Pico's wirelessly?" For clarity's sake, the response to that prompt should include that "if using a Pico that has wireless functionality such as a Pico W then ...". A response that covers something like connection via a wireless protocall will likely require a reponse with significantly more detail than the initial promopt and that is ok. We can tweak those responses and our dataset generation guidelines as needed during the review phase.

It is expected that this set of instructions will grow as the project continues. Suggest changes as we go so future instances can remain aligned with the efforts thus far. If you are generating 10 new entries for a dataset it would be more efficient and productive for you to make suggestions or to ask questions before you generate the entries. It may be impossible for you to ask effective questions prior to the generation of a particular entry. Until you do the research how could you possibly know of a situation. For efficiency's sake you should stop generating and ask the question or make the suggestion. That will also be more accessible and clearer for me. Don't use up your token capacity by regenerating the same data over and again when it's unnecessary. If you are only able to generate one prompt before you have to stop and ask a question that's ok! 

It is also preferred, and this may be the most important thing, at the time that you read this document you should ask questions, point out ambiguity where additional clarification would be beneficial (it may be beneficial for me too!), point out any errors including, but not limited to, grammar, punctuation, spelling, formatting, accuracy, technical ambiguity, or if an example or analogy exists that could be better stated mention that as well. I'm going to stop typing now and present this document to you to see what may come from that request!